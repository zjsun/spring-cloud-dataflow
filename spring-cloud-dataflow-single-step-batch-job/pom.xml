<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-dataflow-parent</artifactId>
		<version>2.9.2-SNAPSHOT</version>
	</parent>
	<artifactId>spring-cloud-dataflow-single-step-batch-job</artifactId>
	<packaging>jar</packaging>
	<properties>
		<plexus.utils.version>3.3.0</plexus.utils.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-task-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-single-step-batch-job</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>com.microsoft.azure</groupId>
					<artifactId>azure-keyvault</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.micrometer.prometheus</groupId>
			<artifactId>prometheus-rsocket-spring</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dataflow-apps-metadata-plugin</artifactId>
				<configuration>
					<storeFilteredMetadata>true</storeFilteredMetadata>
					<metadataFilter>
						<names>
						</names>
						<sourceTypes>
							<filter>org.springframework.cloud.task.batch.autoconfigure.SingleStepJobProperties</filter>
							<filter>org.springframework.boot.autoconfigure.batch.BatchProperties$Job</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.flatfile.FlatFileItemReaderProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.flatfile.FlatFileItemWriterProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.jdbc.JdbcBatchItemWriterProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.jdbc.JdbcCursorItemReaderProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.kafka.KafkaItemReaderProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.kafka.KafkaItemWriterProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.rabbit.AmqpItemReaderProperties</filter>
							<filter>org.springframework.cloud.task.batch.autoconfigure.rabbit.AmqpItemWriterProperties</filter>
							<filter>org.springframework.boot.autoconfigure.amqp.RabbitProperties</filter>
							<filter>org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template</filter>
							<filter>org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry</filter>
							<filter>org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry</filter>
							<filter>org.springframework.cloud.task.configuration.TaskProperties</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security</filter>
							<filter>org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup</filter>
							<filter>org.springframework.boot.autoconfigure.jdbc.DataSourceProperties</filter>
							<filter>org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa</filter>
						</sourceTypes>
					</metadataFilter>
				</configuration>
				<executions>
					<execution>
						<id>aggregate-metadata</id>
						<phase>compile</phase>
						<goals>
							<goal>aggregate-metadata</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
