info:
  app:
    name: "@project.artifactId@"
    description: "@project.name@"
    version: "@project.version@"
#server:
#  port: 8443
#  ssl:
#    enabled: true
#    key-alias: dataflow
#    key-store: "/your/path/to/dataflow.keystore"
#    key-store-type: jks
#    key-store-password: dataflow
#    key-password: dataflow

# Security (Oauth 2):

#security:
#  oauth2:
#    client:
#      client-id: myclient
#      client-secret: mysecret
#      access-token-uri: http://127.0.0.1:9999/oauth/token
#      user-authorization-uri: http://127.0.0.1:9999/oauth/authorize
#    resource:
#      user-info-uri: http://127.0.0.1:9999/me
#      token-info-uri: http://127.0.0.1:9999/oauth/check_token

# If you prefer to use Eureka to locate the Config Server, you can do that by setting
# spring.cloud.config.discovery.enabled=true (default "false"). The net result of that is
# that client apps all need a bootstrap.yml (or an environment variable) with the Eureka
# server address, e.g. in eureka.client.serviceUrl.defaultZone
#
#---
#spring:
#  cloud:
#     config:
#        discovery:
#           enabled: true
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
spring:
  security:
    user:
      name: admin
      password: EDP#Wz4UVHTK
      roles: [VIEW, MANAGE, DESTROY, CREATE, MODIFY, DEPLOY, SCHEDULE]
  cloud:
    dataflow:
      server:
        username: ${spring.security.user.name}
        password: ${spring.security.user.password}

